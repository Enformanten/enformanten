# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - tilly(production)


on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: tilly
  AZ_IMAGE_TAG: crtilly.azurecr.io/tilly/production:${{ github.sha }}
  AZ_CONTAINER_REGISTRY: crtilly.azurecr.io/
  AZ_CONTAINER_REGISTRY_USERNAME: ${{ secrets.AZUREAPPSERVICE_CONTAINERUSERNAME_6D6AE12AE18F4DE5BC41FFC51B117A0A }}
  AZ_CONTAINER_REGISTRY_PASSWORD: ${{ secrets.AZUREAPPSERVICE_CONTAINERPASSWORD_553D0F2C9F6C49C8ACE2D51D1A597E0B }}
  AZ_PUBLISH_PROFILE: ${{ secrets.AZ_PUBLISH_PROFILE }}
  LOGIN_NAME: ${{ secrets.LOGIN_NAME }}
  LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}

jobs:

  metadata:
    runs-on: ubuntu-latest
    outputs:
      git_metadata: ${{ steps.git_metadata.outputs.git_metadata }}

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: .

    - name: Add SHORT_SHA env property with commit short sha
      run: echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV

    - name: Get the last commit date
      run: echo "COMMIT_DATE=`git log -1 --format=%cd --date=format:'%b %d, %H:%M' HEAD`" >> $GITHUB_ENV

    - name: Get the last commit date
      id: git_metadata
      run: echo "git_metadata=${{ env.SHORT_SHA }}-${{ github.event.pusher.name  }}-${{ env.COMMIT_DATE }}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs: metadata

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.AZ_CONTAINER_REGISTRY }}
        username: ${{ env.AZ_CONTAINER_REGISTRY_USERNAME }}
        password: ${{ env.AZ_CONTAINER_REGISTRY_PASSWORD }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ env.AZ_IMAGE_TAG }}
        file: ./Dockerfile
        build-args: |
            GIT_METADATA=${{ needs.metadata.outputs.git_metadata }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
    outputs:
      url: ${{ steps.deploy-to-webapp-staging.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App testing
      uses: azure/webapps-deploy@v2
      id: deploy-to-webapp-staging
      with:
        app-name: ${{ env.APP_NAME }}
        slot-name: staging
        publish-profile: ${{ env.AZ_PUBLISH_PROFILE }}
        images:  ${{ env.AZ_IMAGE_TAG }}

  ping-staging:
    runs-on: ubuntu-latest
    needs: [deploy-staging, metadata]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        sparse-checkout: .github

    - name: Ping Endpoint
      uses: nthomsencph/ping-url@v1.0.8
      with:
        url: ${{ needs.deploy-staging.outputs.url }}/
        response_field: 'version'
        response_value: ${{ needs.metadata.outputs.git_metadata }}
        interval: '30'
        timeout: '900'

  deploy:
    runs-on: ubuntu-latest
    needs: ping-staging
    environment:
      name: production
    outputs:
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App testing
      uses: azure/webapps-deploy@v2
      id: deploy-to-webapp
      with:
        app-name: ${{ env.APP_NAME }}
        slot-name: production
        publish-profile: ${{ env.AZ_PUBLISH_PROFILE }}
        images:  ${{ env.AZ_IMAGE_TAG }}

  ping:
    runs-on: ubuntu-latest
    needs: [deploy, metadata]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        sparse-checkout: .github

    - name: Ping Endpoint
      uses: nthomsencph/ping-url@v1.0.8
      with:
        url: ${{ needs.deploy.outputs.url }}/
        response_field: 'version'
        response_value: ${{ needs.metadata.outputs.git_metadata }}
        interval: '30'
        timeout: '900'

  test:
    runs-on: ubuntu-latest
    needs: [deploy,ping]

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: tests/integration_tests

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install httpx pytest python-decouple

      - name: Run tests
        run: pytest tests/integration_tests
        env:
          URL: ${{ needs.deploy.outputs.url }}
          LOGIN_NAME: ${{ env.LOGIN_NAME }}
          LOGIN_PASSWORD: ${{ env.LOGIN_PASSWORD }}
