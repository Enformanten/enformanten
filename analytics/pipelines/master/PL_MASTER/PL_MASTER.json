{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name"
        },
        "LS_BOOKINGS_BLOB": {
            "type": "string"
        },
        "LS_SNOWFLAKE": {
            "type": "string"
        },
        "LS_Driftoptimeringsmodel": {
            "type": "string"
        },
        "LS_BOOKINGS_SYDDJURS": {
            "type": "string"
        },
        "LS_ENERGI_AARHUS": {
            "type": "string"
        },
        "LS_IOT_SYDDJURS": {
            "type": "string"
        },
        "LS_FAVRSKOV_BOOKING_API": {
            "type": "string"
        },
        "LS_ENERGI_FAVRSKOV2": {
            "type": "string"
        },
        "LS_DMI": {
            "type": "string"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/PL_MASTER')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline is the main pipeline and orchestrator for the collection and storing of new data.\n\nIt firstly updates the date table in datebase to always contain dates until today. Then it calls all the individual pipelines for fetching data. It then runs a number of stored procedures to update the persisted tables that are being used for e.g., BI/Frontend. \n\nFinally it runs the AI-model for predicting room usage before also updating that persisted table of output from the model.",
                "activities": [
                    {
                        "name": "Get Favrskov Bookings",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_DATOER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_BOOKINGS_FAVRSKOV",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Get Syddjurs Bookings",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_DATOER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_BOOKINGS_SYDDJURS",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "UPDATE_BOOKINGS_FEATURIZ",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Favrskov Bookings",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Syddjurs Bookings",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_BOOKINGS', '3_CLEANSED_BOOKINGS')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_BOOKINGS",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_BOOKINGS_FEATURIZ_TIME",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_BOOKINGS_FEATURIZ",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZ('GOVTECH_DB', 'RAW', '4_FEATURIZ_BOOKINGS_TIME', '3_CLEANSED_BOOKINGS_TIME')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_BOOKINGS_TIME",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Favrskov Energidata",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_ENERGI_FAVRSKOV",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "UPDATE_ENERGIDATA_FEATURIZ",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Favrskov Energidata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get Aarhus Energidata",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_ENERGIDATA', '3_CLEANSED_ENERGIDATA')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_ENERGIDATA",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Aarhus Energidata",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_DATOER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_ENERGI_AARHUS",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "Get DMI",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_DATOER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_DMI_MASTER",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "UPDATE_DMI_FEATURIZ",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get DMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_DMI', '3_CLEANSED_DMI')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_DMI",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Syddjurs IoT",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_DATOER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "PL_IOT_SYDDJURS",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "UPDATE_DATOER",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_DATOER', '3_CLEANSED_DATOER')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_DATOER",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_ENERGIDATA_OPTIMIZED",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_ENERGIDATA_FEATURIZ",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_ENERGIDATA_OPTIMIZED', '3_CLEANSED_ENERGIDATA_OPTIMIZED')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_ENERGIDATA_OPTIMIZED",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_CTS_X_IOT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_RAW_ZURFACE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_CTS_X_IOT', '3_CLEANSED_CTS_X_IOT')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_CTS_X_IOT",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_RAW_ZURFACE",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Syddjurs IoT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_ZURFACE_DATA', '', 'ZURFACE_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_ZURFACE_DATA",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_MINIMUM_EL",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_ENERGIDATA_OPTIMIZED",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_MINIMUM_EL', '3_CLEANSED_MINIMUM_EL')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_MINIMUM_EL",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_PASSIVTIMER",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_BOOKINGS_FEATURIZ_TIME",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "UPDATE_MINIMUM_EL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_PASSIVTIMER', '3_CLEANSED_PASSIVTIMER')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_PASSIVTIMER",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_DRIFTOPTIMERING_PREDICT",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_PASSIVTIMER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "UPDATE_CTS_X_IOT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_DRIFTOPTIMERING_PREDICT_TEST', '3_CLEANSED_DRIFTOPTIMERING_PREDICT_TEST')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_DRIFTOPTIMERING_PREDICT_TEST",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://app-govtech.azurewebsites.net/auth/jwt/login",
                            "method": "POST",
                            "headers": {
                                "accept": "application/json",
                                "Content-Type": "application/x-www-form-urlencoded"
                            },
                            "body": {
                                "value": "@activity('Get Config').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UPDATE_DRIFTOPTIMERING_PREDICTIONS",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Predict",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".UPDATEFEATURIZDISTINCT('GOVTECH_DB', 'RAW', '4_FEATURIZ_DRIFTOPTIMERINGSMODEL', '3_CLEANSED_DRIFTOPTIMERINGSMODEL')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "4_FEATURIZ_DRIFTOPTIMERINGSMODEL",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Predict",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "10:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "HttpReadSettings",
                                    "requestMethod": "POST",
                                    "additionalHeaders": {
                                        "value": "@{concat('Authorization: Bearer ' , activity('Get token').output.access_token)}",
                                        "type": "Expression"
                                    },
                                    "requestTimeout": "10:00:00"
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_DRIFTOPTIMERINGSMODEL_PREDICT",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "Get Config",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "UPDATE_DRIFTOPTIMERING_PREDICT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://kv-govtech.vault.azure.net/secrets/driftoptimeringsmodel-cred?api-version=7.0",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:15Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/PL_BOOKINGS_FAVRSKOV')]",
                "[concat(variables('factoryId'), '/pipelines/PL_BOOKINGS_SYDDJURS')]",
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/pipelines/PL_ENERGI_FAVRSKOV')]",
                "[concat(variables('factoryId'), '/pipelines/PL_ENERGI_AARHUS')]",
                "[concat(variables('factoryId'), '/pipelines/PL_DMI_MASTER')]",
                "[concat(variables('factoryId'), '/pipelines/PL_IOT_SYDDJURS')]",
                "[concat(variables('factoryId'), '/datasets/DS_DRIFTOPTIMERINGSMODEL_PREDICT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_BOOKINGS_FAVRSKOV')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline fetches the last load date from the database of bookings and creates an array of days between last loaded and 30 days ahead. It then calls the Favrskov Booking API day-for-day and puts in the designated storage container. Finally, it triggers the update of the raw table in Snowflake by a stored procedure.",
                "activities": [
                    {
                        "name": "Get LAST_LOAD_DATE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "select max(dato::DATE)::Date as date from \"GOVTECH_DB\".\"RAW\".\"3_CLEANSED_FAVRSKOV_BOOKINGS\";",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "3_CLEANSED_FAVRSKOV_BOOKINGS",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set start date",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Get LAST_LOAD_DATE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "start_date",
                            "value": {
                                "value": "@utcNow()",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set number of days",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set start date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set end date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "days",
                            "value": {
                                "value": "@string(add(div(sub(ticks(variables('end_date')),ticks(variables('start_date'))),864000000000), 1))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set days array",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Set number of days",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "days_array",
                            "value": {
                                "value": "@range(0, sub(int(variables('days')),1))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Loop through dates",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set days array",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('days_array')",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "Get Bookings",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Set date",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings",
                                                "maxConcurrentConnections": 2
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": true,
                                        "stagingSettings": {
                                            "linkedServiceName": {
                                                "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                                                "type": "LinkedServiceReference"
                                            },
                                            "path": "bookings/favrskov"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_FAVRSKOV_BOOKING_API",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "year": {
                                                    "value": "@formatDateTime(variables('current_load_date'), 'yyyy')",
                                                    "type": "Expression"
                                                },
                                                "month": {
                                                    "value": "@formatDateTime(variables('current_load_date'), 'MM')",
                                                    "type": "Expression"
                                                },
                                                "day": {
                                                    "value": "@formatDateTime(variables('current_load_date'), 'dd')",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_BOOKINGS_FAVRSKOV_BLOB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "year": {
                                                    "value": "@formatDateTime(variables('start_date'), 'yyyy')",
                                                    "type": "Expression"
                                                },
                                                "month": {
                                                    "value": "@formatDateTime(variables('start_date'), 'MM')",
                                                    "type": "Expression"
                                                },
                                                "day": {
                                                    "value": "@concat(formatDateTime(variables('start_date'), 'dd'), '/', formatDateTime(variables('current_load_date'), 'yyyy-MM-dd'))",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Set date",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "current_load_date",
                                        "value": {
                                            "value": "@addDays(variables('start_date'), item())",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "UPDATE_RAW",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Loop through dates",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_FAVRSKOV_BOOKINGS', 'favrskov', 'BOOKINGS_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_FAVRSKOV_BOOKINGS",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set end date",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Get LAST_LOAD_DATE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "end_date",
                            "value": {
                                "value": "@addDays(utcNow(), 30)",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "start_date": {
                        "type": "String"
                    },
                    "days": {
                        "type": "String"
                    },
                    "days_array": {
                        "type": "Array"
                    },
                    "current_load_date": {
                        "type": "String"
                    },
                    "end_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Bookings"
                },
                "annotations": [
                    "Bookings"
                ],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/datasets/DS_FAVRSKOV_BOOKING_API')]",
                "[concat(variables('factoryId'), '/datasets/DS_BOOKINGS_FAVRSKOV_BLOB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_BOOKINGS_SYDDJURS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline fetches the last load date from the database of bookings and creates an array of days between last loaded and 30 days ahead. It then calls the Syddjurs Booking API day-for-day and puts in the designated storage container. Finally, it triggers the update of the raw table in Snowflake by a stored procedure.",
                "activities": [
                    {
                        "name": "Get LAST_LOAD_DATE",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": {
                                    "value": "select max(BOOKING_START::DATE)::Date as date from \"GOVTECH_DB\".\"RAW\".\"3_CLEANSED_SYDDJURS_BOOKINGS\";",
                                    "type": "Expression"
                                },
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "3_CLEANSED_SYDDJURS_BOOKINGS",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set start date",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Get LAST_LOAD_DATE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "start_date",
                            "value": {
                                "value": "@if(lessOrEquals(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, utcNow()), activity('Get LAST_LOAD_DATE').output.firstRow.DATE, formatDateTime(utcNow(), 'yyyy-MM-dd'))",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set end date",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Get LAST_LOAD_DATE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "end_date",
                            "value": {
                                "value": "@formatDateTime(addDays(utcNow(), 30), 'yyyy-MM-dd')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Get bookings",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Set start date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set end date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "supportRFC5988": "true"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_BOOKINGS_SYDDJURS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "start_date": {
                                        "value": "@variables('start_date')",
                                        "type": "Expression"
                                    },
                                    "end_date": {
                                        "value": "@variables('end_date')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_BOOKINGS_SYDDJURS_BLOB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "year": {
                                        "value": "@formatDateTime(variables('start_date'), 'yyyy')",
                                        "type": "Expression"
                                    },
                                    "month": {
                                        "value": "@formatDateTime(variables('start_date'), 'MM')",
                                        "type": "Expression"
                                    },
                                    "day": {
                                        "value": "@formatDateTime(variables('start_date'), 'dd')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "UPDATE_RAW",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get bookings",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_SYDDJURS_BOOKINGS', 'syddjurs', 'BOOKINGS_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_SYDDJURS_BOOKINGS",
                                    "schema": "RAW"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "start_date": {
                        "type": "String"
                    },
                    "end_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Bookings"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/datasets/DS_BOOKINGS_SYDDJURS')]",
                "[concat(variables('factoryId'), '/datasets/DS_BOOKINGS_SYDDJURS_BLOB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_SNOWFLAKE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_SNOWFLAKE')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "database": {
                        "type": "string"
                    },
                    "table": {
                        "type": "string"
                    },
                    "schema": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "SnowflakeTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_ENERGI_FAVRSKOV')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline is responsible for gathering energy consumption for Favrskov. Firstly it fetches the credentials/config for getting an access token for the API. The token is then fetched and stored in a variable. The wanted tags are then fetched from a config and looped through. In the loop the last load date from the databased is looked up and the API is then called to get  and save the newest data. Finally the raw table in the database is triggered to update. ",
                "activities": [
                    {
                        "name": "Get Config",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://kv-govtech.vault.azure.net/secrets/favrskov-omega-config?api-version=7.0",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://favrskov.emshost.dk/Omegaweb/api/Authentication/Token",
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "@activity('Get Config').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GET tags",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_Configs",
                                "type": "DatasetReference",
                                "parameters": {
                                    "config_file": "favrskov_tags.conf"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Loop tags",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GET tags",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GET tags').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 4,
                            "activities": [
                                {
                                    "name": "Get data",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Get LAST_LOAD_DATE",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:00:30",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "POST",
                                            "requestBody": {
                                                "value": "@string(array(json(concat('{\n  \"TagID\":', item().tags, ',\n  \"To\":\"', formatDateTime(utcnow(), 'yyyy-MM-ddThh:mm:ss'),'\",\n  \"From\":\"', formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'yyyy-MM-ddThh:mm:ss'),'\",\n  \"Period\": 6,\n  \"Flag\": 0\n}'))))",
                                                "type": "Expression"
                                            },
                                            "additionalHeaders": {
                                                "Authorization": {
                                                    "value": "@concat('GUID ', variables('api_token'))",
                                                    "type": "Expression"
                                                },
                                                "Content-Type": "application/json"
                                            },
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_ENERGI_FAVRSKOV",
                                            "type": "DatasetReference",
                                            "parameters": {}
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_ENERGI_FAVRSKOV_BLOB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "year": {
                                                    "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'yyyy')",
                                                    "type": "Expression"
                                                },
                                                "month": {
                                                    "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'MM')",
                                                    "type": "Expression"
                                                },
                                                "day": {
                                                    "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'dd')",
                                                    "type": "Expression"
                                                },
                                                "tagid": {
                                                    "value": "@item().tags",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Get LAST_LOAD_DATE",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SnowflakeSource",
                                            "query": {
                                                "value": "@concat('select max(DATE::DATE)::Date as date from \"GOVTECH_DB\".\"RAW\".\"3_CLEANSED_FAVRSKOV_ENERGIDATA\" where TAGID =', item().tags, 'AND VALUE IS NOT NULL AND DATE::DATE < CURRENT_DATE();')",
                                                "type": "Expression"
                                            },
                                            "exportSettings": {
                                                "type": "SnowflakeExportCopyCommand"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SNOWFLAKE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "database": "GOVTECH_DB",
                                                "table": "3_CLEANSED_FAVRSKOV_ENERGIDATA",
                                                "schema": "RAW"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "Set token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Get token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "api_token",
                            "value": {
                                "value": "@activity('Get token').output.access_token",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UPDATE_RAW",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Loop tags",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_FAVRSKOV_ENERGIDATA', 'favrskov', 'ENERGIDATA_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_FAVRSKOV_ENERGIDATA",
                                    "schema": "RAW"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "api_token": {
                        "type": "String"
                    },
                    "api-key": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Energi"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_Configs')]",
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/datasets/DS_ENERGI_FAVRSKOV')]",
                "[concat(variables('factoryId'), '/datasets/DS_ENERGI_FAVRSKOV_BLOB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_ENERGI_AARHUS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This is the main pipeline for gathering Energy Consumption data from Aarhus. It is divided into two parts. The main part gets the types/keys from a config and loops through them. In the inner activity it gets the last load date of that measure type and fetches and stores the data from the API.\n\nThe other part fetches the return temperature from a different place within the same API. \n\nFinally, both raw tables corresponding the data are updated in the database. \n\nOBS: Aarhus updates Energy Data two days behind the current date",
                "activities": [
                    {
                        "name": "Get Types",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_Configs",
                                "type": "DatasetReference",
                                "parameters": {
                                    "config_file": "aarhus_types.conf"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Loop measure types",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Get Types",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('Get Types').output.value",
                                "type": "Expression"
                            },
                            "batchCount": 4,
                            "activities": [
                                {
                                    "name": "Get Energy Data",
                                    "type": "Copy",
                                    "dependsOn": [
                                        {
                                            "activity": "Get LAST_LOAD_DATE",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:10:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_ENERGI_AARHUS",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "measure_type": {
                                                    "value": "@item().measure_types",
                                                    "type": "Expression"
                                                },
                                                "energyreportno": {
                                                    "value": "@item().energyreportno",
                                                    "type": "Expression"
                                                },
                                                "startdate": {
                                                    "value": "@activity('Get LAST_LOAD_DATE').output.firstRow.DATE",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_ENERGI_AARHUS_BLOB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "year": {
                                                    "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'yyyy')",
                                                    "type": "Expression"
                                                },
                                                "month": {
                                                    "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'MM')",
                                                    "type": "Expression"
                                                },
                                                "day": {
                                                    "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'dd')",
                                                    "type": "Expression"
                                                },
                                                "measure_type": {
                                                    "value": "@item().measure_types",
                                                    "type": "Expression"
                                                },
                                                "energyreportno": {
                                                    "value": "@item().energyreportno",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "Get LAST_LOAD_DATE",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SnowflakeSource",
                                            "query": {
                                                "value": "@concat('select ifnull(max(dato::DATE)::Date,''2023-01-01'')::date as date from \"GOVTECH_DB\".\"RAW\".\"3_CLEANSED_AARHUS_ENERGIDATA\" where KEY =', item().energyreportno, 'and MEASURETYPE =', '''', item().measure_types, '''', ' AND VALUE IS NOT NULL;')\n",
                                                "type": "Expression"
                                            },
                                            "exportSettings": {
                                                "type": "SnowflakeExportCopyCommand"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SNOWFLAKE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "database": "GOVTECH_DB",
                                                "table": "3_CLEANSED_AARHUS_ENERGIDATA",
                                                "schema": "RAW"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "UPDATE_RAW",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Loop measure types",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_AARHUS_ENERGIDATA', 'aarhus', 'ENERGIDATA_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_AARHUS_ENERGIDATA",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get Return temperature",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get LAST_LOAD_DATE_TEMPERATURES",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:01:40",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "supportRFC5988": "true"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_TEMPERATURES_AARHUS",
                                "type": "DatasetReference",
                                "parameters": {
                                    "startdate": {
                                        "value": "@activity('Get LAST_LOAD_DATE_TEMPERATURES').output.firstRow.DATE",
                                        "type": "Expression"
                                    },
                                    "installationnumber": "137429",
                                    "meternumber": "5366950"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_TEMPERATURES_AARHUS_BLOB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "year": {
                                        "value": "@formatDateTime(activity('Get LAST_LOAD_DATE_TEMPERATURES').output.firstRow.DATE, 'yyyy')",
                                        "type": "Expression"
                                    },
                                    "month": {
                                        "value": "@formatDateTime(activity('Get LAST_LOAD_DATE_TEMPERATURES').output.firstRow.DATE, 'MM')",
                                        "type": "Expression"
                                    },
                                    "day": {
                                        "value": "@formatDateTime(activity('Get LAST_LOAD_DATE_TEMPERATURES').output.firstRow.DATE, 'dd')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get LAST_LOAD_DATE_TEMPERATURES",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": {
                                    "value": "@concat('select ifnull(max(dato::DATE)::Date,''2023-01-01'')::date as date from \"GOVTECH_DB\".\"RAW\".\"2_STANDARD_AARHUS_ENERGIDATA_TEMPERATURES\" WHERE returneret_energi is not null ;')",
                                    "type": "Expression"
                                },
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "2_STANDARD_AARHUS_ENERGIDATA_TEMPERATURES",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "UPDATE_RAW_TEMPERATURES",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get Return temperature",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_AARHUS_ENERGIDATA_TEMPERATURES', 'aarhus_temperatures', 'ENERGIDATA_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_AARHUS_ENERGIDATA_TEMPERATURES",
                                    "schema": "RAW"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "api-key": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "Energi"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_Configs')]",
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/datasets/DS_TEMPERATURES_AARHUS')]",
                "[concat(variables('factoryId'), '/datasets/DS_TEMPERATURES_AARHUS_BLOB')]",
                "[concat(variables('factoryId'), '/datasets/DS_ENERGI_AARHUS')]",
                "[concat(variables('factoryId'), '/datasets/DS_ENERGI_AARHUS_BLOB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_DMI_MASTER')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline fetches the wanted stations from the municipalities from the config-file and saves them in an array. \nIt also fetches the API-key from the Azure Keyvault. \n\nIt then loops through all stations, gets the last load date and executes the pipelines fetching and saving the observations.\n\nFinally, it updates the raw table in the database by a stored procedure. ",
                "activities": [
                    {
                        "name": "GET_Stations",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_Configs",
                                "type": "DatasetReference",
                                "parameters": {
                                    "config_file": "stations.conf"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Set station_array",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GET_Stations",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "station_array",
                            "value": {
                                "value": "@activity('GET_Stations').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Loop through Stations",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "Set station_array",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set API_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('station_array')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "Get LAST_LOAD_DATE",
                                    "type": "Lookup",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "SnowflakeSource",
                                            "query": {
                                                "value": "@concat('select max(TIMESTAMP::DATE)::Date as date from \"GOVTECH_DB\".\"RAW\".\"3_CLEANSED_DMI\" where STATIONID =', item().STATIONID, ';')",
                                                "type": "Expression"
                                            },
                                            "exportSettings": {
                                                "type": "SnowflakeExportCopyCommand"
                                            }
                                        },
                                        "dataset": {
                                            "referenceName": "DS_SNOWFLAKE",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "database": "GOVTECH_DB",
                                                "table": "3_CLEANSED_DMI",
                                                "schema": "RAW"
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Set start date",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "Get LAST_LOAD_DATE",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "start_date",
                                        "value": {
                                            "value": "@activity('Get LAST_LOAD_DATE').output.firstRow.DATE",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "Execute pl_dmi",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [
                                        {
                                            "activity": "Set start date",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_DMI",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "stationid": {
                                                "value": "@item().stationid",
                                                "type": "Expression"
                                            },
                                            "start_date": {
                                                "value": "@variables('start_date')",
                                                "type": "Expression"
                                            },
                                            "api_key": {
                                                "value": "@variables('api_key')",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GET API_KEY",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://kv-govtech.vault.azure.net/secrets/dmi?api-version=7.0",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Set API_KEY",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "GET API_KEY",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "api_key",
                            "value": {
                                "value": "@activity('GET API_KEY').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UPDATE_RAW",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Loop through Stations",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_DMI', '', 'DMI_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_DMI",
                                    "schema": "RAW"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "station_array": {
                        "type": "Array"
                    },
                    "start_date": {
                        "type": "String"
                    },
                    "api_key": {
                        "type": "String"
                    },
                    "end_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "DMI"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_Configs')]",
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/pipelines/PL_DMI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_IOT_SYDDJURS')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline fetches IoT Data from Syddjurs. It firstly gathers the config for the credentials to fetch an access token. After the token is obtained it looks up the last load date of IoT Data. It the proceeds to call the API for IoT Data from the last load date until today. Finally it updates the raw table in the database",
                "activities": [
                    {
                        "name": "Get Config",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://kv-govtech.vault.azure.net/secrets/syddjurs-iot-api?api-version=7.0",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get token",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "Get Config",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://syddjurs.emshost.dk/OmegaWeb/api/Authentication/Token",
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "value": "@activity('Get Config').output.value",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set token",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "Get token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "api-key",
                            "value": {
                                "value": "@activity('Get token').output.access_token",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UPDATE_RAW",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Get data",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": "CALL \"RAW\".RAWLOADDATA('GOVTECH_DB', 'RAW', '1_RAW_SYDDJURS_IOT_VALUES', 'syddjurs', 'IOT_STAGE')",
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "1_RAW_SYDDJURS_IOT_VALUES",
                                    "schema": "RAW"
                                }
                            }
                        }
                    },
                    {
                        "name": "Get data",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "Get LAST_LOAD_DATE",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:05:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "POST",
                                "requestBody": {
                                    "value": "@string(json(concat('{\n  \"From\":\"', formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'yyyy-MM-ddT00:mm:ss'),'+01:00\",\n  \"To\":\"', formatDateTime(utcnow(), 'yyyy-MM-ddThh:mm:ss'),'+01:00\",\n  \"Period\": 7,\n  \"Flag\": 0\n}')))",
                                    "type": "Expression"
                                },
                                "additionalHeaders": {
                                    "Authorization": {
                                        "value": "@concat('Bearer ', variables('api-key'))",
                                        "type": "Expression"
                                    },
                                    "Content-Type": "application/json"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "DS_IOT_SYDDJURS",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "DS_IOT_SYDDJURS_BLOB",
                                "type": "DatasetReference",
                                "parameters": {
                                    "year": {
                                        "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'yyyy')",
                                        "type": "Expression"
                                    },
                                    "month": {
                                        "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'MM')",
                                        "type": "Expression"
                                    },
                                    "day": {
                                        "value": "@formatDateTime(activity('Get LAST_LOAD_DATE').output.firstRow.DATE, 'dd')",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "Get LAST_LOAD_DATE",
                        "type": "Lookup",
                        "dependsOn": [
                            {
                                "activity": "Set token",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SnowflakeSource",
                                "query": {
                                    "value": "select max(DATE::DATE)::Date as date from \"GOVTECH_DB\".\"RAW\".\"3_CLEANSED_SYDDJURS_IOT\"",
                                    "type": "Expression"
                                },
                                "exportSettings": {
                                    "type": "SnowflakeExportCopyCommand"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_SNOWFLAKE",
                                "type": "DatasetReference",
                                "parameters": {
                                    "database": "GOVTECH_DB",
                                    "table": "3_CLEANSED_SYDDJURS_IOT",
                                    "schema": "RAW"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "variables": {
                    "api-key": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "IoT"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE')]",
                "[concat(variables('factoryId'), '/datasets/DS_IOT_SYDDJURS')]",
                "[concat(variables('factoryId'), '/datasets/DS_IOT_SYDDJURS_BLOB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_DRIFTOPTIMERINGSMODEL_PREDICT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_Driftoptimeringsmodel')]",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "HttpServerLocation",
                        "relativeUrl": "/predict"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_BOOKINGS_SYDDJURS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_SYDDJURS')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "start_date": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@concat('bookings?organization=4927&from=', dataset().start_date,'&to=', dataset().end_date,'&resources=12034;10339;12032;39100')",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_BOOKINGS_SYDDJURS_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().year,'/',dataset().month,'/',dataset().day, '.json')",
                            "type": "Expression"
                        },
                        "folderPath": "syddjurs",
                        "container": "bookings"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_Configs')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "config_file": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().config_file",
                            "type": "Expression"
                        },
                        "container": "configs"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_TEMPERATURES_AARHUS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_ENERGI_AARHUS')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "startdate": {
                        "type": "string"
                    },
                    "installationnumber": {
                        "type": "string"
                    },
                    "meternumber": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@concat('meterreport/installationnumber/',dataset().installationnumber,'/meternumber/', dataset().meternumber, '/?includeInactiveMeters=false&periodEnd=', formatDateTime(addDays(utcNow(),-2), 'yyyy-MM-dd'),'T23%3A00%3A00.000%2B01%3A00&periodStart=', formatDateTime(dataset().startdate, 'yyyy-MM-dd'), 'T00%3A00%3A00.000%2B01%3A00&reportType=energy&resolution=hour')",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_TEMPERATURES_AARHUS_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().year,'/',dataset().month,'/',dataset().day, '.json')",
                            "type": "Expression"
                        },
                        "folderPath": "aarhus_temperatures",
                        "container": "energi-data"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_IOT_SYDDJURS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_IOT_SYDDJURS')]",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {},
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_IOT_SYDDJURS_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().year,'/',dataset().month,'/',dataset().day, '.json')",
                            "type": "Expression"
                        },
                        "folderPath": "syddjurs",
                        "container": "iot-data"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_FAVRSKOV_BOOKING_API')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_FAVRSKOV_BOOKING_API')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@concat('?gruppe=30&&year=',dataset().year,'&month=',dataset().month,'&day=',dataset().day,'&type=json')",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_BOOKINGS_FAVRSKOV_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().year,'/',dataset().month,'/',dataset().day, '.json')",
                            "type": "Expression"
                        },
                        "folderPath": "favrskov",
                        "container": "bookings"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ENERGI_FAVRSKOV')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_ENERGI_FAVRSKOV2')]",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {},
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ENERGI_FAVRSKOV_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    },
                    "tagid": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().tagid, '/', dataset().year,'/',dataset().month,'/',dataset().day, '.json')",
                            "type": "Expression"
                        },
                        "folderPath": "favrskov",
                        "container": "energi-data"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ENERGI_AARHUS')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_ENERGI_AARHUS')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "measure_type": {
                        "type": "String"
                    },
                    "energyreportno": {
                        "type": "String"
                    },
                    "startdate": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@concat('energyreport/key/',dataset().energyreportno,'?allowMissingData=true&measureType=', dataset().measure_type, '&periodEnd=', formatDateTime(addDays(utcNow(),-2), 'yyyy-MM-dd'),'T23%3A00%3A00.000%2B01%3A00&periodStart=', formatDateTime(dataset().startdate, 'yyyy-MM-dd'), 'T00%3A00%3A00.000%2B01%3A00&reportType=energy&resolution=hour')",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_ENERGI_AARHUS_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "year": {
                        "type": "string"
                    },
                    "month": {
                        "type": "string"
                    },
                    "day": {
                        "type": "string"
                    },
                    "measure_type": {
                        "type": "string"
                    },
                    "energyreportno": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().measure_type, '/', dataset().energyreportno, '/',dataset().year,'/',dataset().month,'/',dataset().day, '.json')",
                            "type": "Expression"
                        },
                        "folderPath": "aarhus",
                        "container": "energi-data"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_DMI')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline fetches the parameters wanted from the config-file in the storage account and loops through them. It calls DMI's Open API and saves the observations in the storage account. ",
                "activities": [
                    {
                        "name": "GET_PARAMETERS",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "dataset": {
                                "referenceName": "DS_Configs",
                                "type": "DatasetReference",
                                "parameters": {
                                    "config_file": "parameters.conf"
                                }
                            },
                            "firstRowOnly": false
                        }
                    },
                    {
                        "name": "Get observations",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GET_PARAMETERS",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GET_PARAMETERS').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "Save observations",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:04:00",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "supportRFC5988": "true"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "DS_DMI",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "start_date": {
                                                    "value": "@formatDateTime(pipeline().parameters.start_date, 'yyyy-MM-ddTHH:mm:ss')",
                                                    "type": "Expression"
                                                },
                                                "api_key": {
                                                    "value": "@pipeline().parameters.api_key",
                                                    "type": "Expression"
                                                },
                                                "station_id": {
                                                    "value": "@pipeline().parameters.stationid",
                                                    "type": "Expression"
                                                },
                                                "parameter": {
                                                    "value": "@item().parameter",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "DS_DMI_BLOB",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "parameter": {
                                                    "value": "@item().parameter",
                                                    "type": "Expression"
                                                },
                                                "station_id": {
                                                    "value": "@pipeline().parameters.stationid",
                                                    "type": "Expression"
                                                },
                                                "date": {
                                                    "value": "@pipeline().parameters.start_date",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "parameters": {
                    "stationid": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "api_key": {
                        "type": "string"
                    }
                },
                "variables": {
                    "api_key": {
                        "type": "String"
                    },
                    "start_date": {
                        "type": "String"
                    },
                    "end_date": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "DMI"
                },
                "annotations": [],
                "lastPublishTime": "2023-10-02T09:25:14Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/DS_Configs')]",
                "[concat(variables('factoryId'), '/datasets/DS_DMI')]",
                "[concat(variables('factoryId'), '/datasets/DS_DMI_BLOB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_DMI')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_DMI')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "start_date": {
                        "type": "string"
                    },
                    "api_key": {
                        "type": "string"
                    },
                    "station_id": {
                        "type": "string"
                    },
                    "parameter": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@concat('items?limit=300000&datetime=', dataset().start_date, '%2B00:00/', formatDateTime(utcnow(), 'yyyy-MM-ddTHH:mm:ss'), '%2B00:00&stationId=', dataset().station_id, '&parameterId=', dataset().parameter, '&api-key=', dataset().api_key)",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/DS_DMI_BLOB')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "[parameters('LS_BOOKINGS_BLOB')]",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "parameter": {
                        "type": "string"
                    },
                    "station_id": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Json",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@concat(dataset().station_id,'/',dataset().parameter,'/',formatDateTime(dataset().date, 'yyyy/MM/dd/hh:mm:ss'),'.json')",
                            "type": "Expression"
                        },
                        "container": "dmi"
                    }
                },
                "schema": {}
            },
            "dependsOn": []
        }
    ]
}